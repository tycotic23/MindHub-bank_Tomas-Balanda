<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.mindhub.homebanking.RepositoriesTest" tests="11" skipped="0" failures="0" errors="0" timestamp="2023-09-23T03:39:14" hostname="FRBNOTE" time="27.266">
  <properties/>
  <testcase name="exist001Account()" classname="com.mindhub.homebanking.RepositoriesTest" time="3.722"/>
  <testcase name="existCard()" classname="com.mindhub.homebanking.RepositoriesTest" time="1.359"/>
  <testcase name="existAccount()" classname="com.mindhub.homebanking.RepositoriesTest" time="1.368"/>
  <testcase name="existPersonalLoan()" classname="com.mindhub.homebanking.RepositoriesTest" time="2.75"/>
  <testcase name="exist001AccountOwner()" classname="com.mindhub.homebanking.RepositoriesTest" time="3.282"/>
  <testcase name="existLoans()" classname="com.mindhub.homebanking.RepositoriesTest" time="2.682"/>
  <testcase name="existxCard()" classname="com.mindhub.homebanking.RepositoriesTest" time="1.322"/>
  <testcase name="existClient()" classname="com.mindhub.homebanking.RepositoriesTest" time="3.252"/>
  <testcase name="exist500Transaction()" classname="com.mindhub.homebanking.RepositoriesTest" time="2.05"/>
  <testcase name="existTransaction()" classname="com.mindhub.homebanking.RepositoriesTest" time="2.042"/>
  <testcase name="existMelbaClient()" classname="com.mindhub.homebanking.RepositoriesTest" time="3.369"/>
  <system-out><![CDATA[00:38:47.959 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
00:38:48.013 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
00:38:48.226 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.mindhub.homebanking.RepositoriesTest] from class [org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper]
00:38:48.263 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.mindhub.homebanking.RepositoriesTest], using SpringBootContextLoader
00:38:48.276 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.mindhub.homebanking.RepositoriesTest]: class path resource [com/mindhub/homebanking/RepositoriesTest-context.xml] does not exist
00:38:48.278 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.mindhub.homebanking.RepositoriesTest]: class path resource [com/mindhub/homebanking/RepositoriesTestContext.groovy] does not exist
00:38:48.278 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.mindhub.homebanking.RepositoriesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
00:38:48.280 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.mindhub.homebanking.RepositoriesTest]: RepositoriesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
00:38:48.691 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.mindhub.homebanking.RepositoriesTest]
00:38:48.962 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\soltommy\Desktop\mind hub - backend\Homebanking\homebanking\build\classes\java\main\com\mindhub\homebanking\HomebankingApplication.class]
00:38:48.965 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.mindhub.homebanking.HomebankingApplication for test class com.mindhub.homebanking.RepositoriesTest
00:38:48.983 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - @TestExecutionListeners is not present for class [com.mindhub.homebanking.RepositoriesTest]: using defaults.
00:38:48.986 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
00:38:49.131 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5827af16, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@654d8173, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@56c9bbd8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@630cb4a4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@636e8cc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f79a760, org.springframework.test.context.transaction.TransactionalTestExecutionListener@14f5da2c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@12dae582, org.springframework.test.context.event.EventPublishingTestExecutionListener@239b0f9d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@619bfe29, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b057c8c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1eb6749b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@652a7737, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5b7ea70d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2bef51f2]
00:38:49.146 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
00:38:49.286 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@56276db8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::               (v2.7.14)

2023-09-23 00:38:51.669  INFO 1852 --- [    Test worker] c.mindhub.homebanking.RepositoriesTest   : Starting RepositoriesTest using Java 19.0.2 on frbnote with PID 1852 (started by soltommy in C:\Users\soltommy\Desktop\mind hub - backend\Homebanking\homebanking)
2023-09-23 00:38:51.674  INFO 1852 --- [    Test worker] c.mindhub.homebanking.RepositoriesTest   : No active profile set, falling back to 1 default profile: "default"
2023-09-23 00:38:53.480  INFO 1852 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-09-23 00:38:53.849  INFO 1852 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 331 ms. Found 6 JPA repository interfaces.
2023-09-23 00:38:56.309  INFO 1852 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-09-23 00:38:56.665  INFO 1852 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-09-23 00:38:57.715  INFO 1852 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-09-23 00:38:58.371  INFO 1852 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-09-23 00:39:01.842  INFO 1852 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-09-23 00:39:01.907  INFO 1852 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2023-09-23 00:39:10.631  INFO 1852 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-09-23 00:39:10.669  INFO 1852 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-09-23 00:39:14.768  INFO 1852 --- [    Test worker] c.mindhub.homebanking.RepositoriesTest   : Started RepositoriesTest in 25.205 seconds (JVM running for 30.672)
2023-09-23 00:39:15.203  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@56276db8, testMethod = exist001Account@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select account0_.id as id1_0_, account0_.balance as balance2_0_, account0_.client_id as client_i5_0_, account0_.creation_date as creation3_0_, account0_.number as number4_0_ from account account0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2023-09-23 00:39:18.593  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@56276db8, testMethod = exist001Account@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:18.630  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@464abed, testMethod = existCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select card0_.id as id1_1_, card0_.cardholder as cardhold2_1_, card0_.cardholder_id as cardhol10_1_, card0_.color as color3_1_, card0_.cvv as cvv4_1_, card0_.from_date as from_dat5_1_, card0_.number as number6_1_, card0_.state as state7_1_, card0_.thru_date as thru_dat8_1_, card0_.type as type9_1_ from card card0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2023-09-23 00:39:19.976  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@464abed, testMethod = existCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:19.990  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@782e0844, testMethod = existAccount@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select account0_.id as id1_0_, account0_.balance as balance2_0_, account0_.client_id as client_i5_0_, account0_.creation_date as creation3_0_, account0_.number as number4_0_ from account account0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2023-09-23 00:39:21.350  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@782e0844, testMethod = existAccount@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:21.366  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@35b79b1f, testMethod = existPersonalLoan@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select loan0_.id as id1_4_, loan0_.max_amount as max_amou2_4_, loan0_.name as name3_4_ from loan loan0_
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2023-09-23 00:39:24.105  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@35b79b1f, testMethod = existPersonalLoan@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:24.118  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@73dd3a46, testMethod = exist001AccountOwner@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.first_name as first_na3_2_, client0_.last_name as last_nam4_2_, client0_.password as password5_2_ from client client0_
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2023-09-23 00:39:27.393  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@73dd3a46, testMethod = exist001AccountOwner@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:27.407  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@477e5b69, testMethod = existLoans@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select loan0_.id as id1_4_, loan0_.max_amount as max_amou2_4_, loan0_.name as name3_4_ from loan loan0_
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2023-09-23 00:39:30.083  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@477e5b69, testMethod = existLoans@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:30.101  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@6e7cb01a, testMethod = existxCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select card0_.id as id1_1_, card0_.cardholder as cardhold2_1_, card0_.cardholder_id as cardhol10_1_, card0_.color as color3_1_, card0_.cvv as cvv4_1_, card0_.from_date as from_dat5_1_, card0_.number as number6_1_, card0_.state as state7_1_, card0_.thru_date as thru_dat8_1_, card0_.type as type9_1_ from card card0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.cardholder_id as cardhol10_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.cardholder_id as cardhol10_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.state as state7_1_6_, cards3_.thru_date as thru_dat8_1_6_, cards3_.type as type9_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.cardholder_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2023-09-23 00:39:31.413  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@6e7cb01a, testMethod = existxCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:31.427  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@a74c940, testMethod = existClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.first_name as first_na3_2_, client0_.last_name as last_nam4_2_, client0_.password as password5_2_ from client client0_
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2023-09-23 00:39:34.671  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@a74c940, testMethod = existClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:34.686  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@642d971f, testMethod = exist500Transaction@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select transactio0_.id as id1_6_, transactio0_.account_id as account_6_6_, transactio0_.amount as amount2_6_, transactio0_.date as date3_6_, transactio0_.description as descript4_6_, transactio0_.type as type5_6_ from transaction transactio0_
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
2023-09-23 00:39:36.730  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@642d971f, testMethod = exist500Transaction@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:36.745  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@6693818c, testMethod = existTransaction@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select transactio0_.id as id1_6_, transactio0_.account_id as account_6_6_, transactio0_.amount as amount2_6_, transactio0_.date as date3_6_, transactio0_.description as descript4_6_, transactio0_.type as type5_6_ from transaction transactio0_
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.cardholder_id as cardhol10_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.cardholder_id as cardhol10_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.state as state7_1_3_, cards2_.thru_date as thru_dat8_1_3_, cards2_.type as type9_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.cardholder_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
2023-09-23 00:39:38.781  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@6693818c, testMethod = existTransaction@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-09-23 00:39:38.795  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@391b03b, testMethod = existMelbaClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1b7549]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.first_name as first_na3_2_, client0_.last_name as last_nam4_2_, client0_.password as password5_2_ from client client0_
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.cardholder_id as cardhol10_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.cardholder_id as cardhol10_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.state as state7_1_1_, cards0_.thru_date as thru_dat8_1_1_, cards0_.type as type9_1_1_ from card cards0_ where cards0_.cardholder_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2023-09-23 00:39:42.155  INFO 1852 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2b43529a testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@391b03b, testMethod = existMelbaClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4264b240 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4372b9b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@42721fe, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@3b8cb39f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2807bdeb, [ImportsContextCustomizer@5b04476e key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@681a8b4e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4cf8b2dc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
